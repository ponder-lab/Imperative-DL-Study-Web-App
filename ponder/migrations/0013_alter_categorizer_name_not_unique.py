# Generated by Django 3.2.6 on 2021-12-22 21:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BugFix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha', models.CharField(max_length=40)),
                ('is_func_fix', models.BooleanField()),
                ('category_comment', models.TextField(blank=True, null=True)),
                ('cause_comment', models.TextField(blank=True, null=True)),
                ('symptom_comment', models.TextField(blank=True, null=True)),
                ('fix_comment', models.TextField(blank=True, null=True)),
                ('should_discuss', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bug_fixes',
            },
        ),
        migrations.CreateModel(
            name='Categorizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('initials', models.CharField(max_length=3, unique=True)),
                ('user', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'categorizers',
            },
        ),
        migrations.CreateModel(
            name='CommitDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha', models.CharField(max_length=40)),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
                ('file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_test', models.IntegerField(blank=True, null=True)),
                ('method_name', models.CharField(blank=True, max_length=51, null=True)),
                ('tf_function_adds', models.IntegerField(blank=True, db_column='tf.function_adds', null=True)),
                ('tf_function_dels', models.IntegerField(blank=True, db_column='tf.function_dels', null=True)),
                ('total_adds', models.IntegerField(blank=True, null=True)),
                ('total_dels', models.IntegerField(blank=True, null=True)),
                ('warning_alert', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'commit_details',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True)),
                ('description', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'datasets',
            },
        ),
        migrations.CreateModel(
            name='ProblemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=254, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problem_categories',
            },
        ),
        migrations.CreateModel(
            name='ProblemCause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cause', models.CharField(max_length=254, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problem_causes',
            },
        ),
        migrations.CreateModel(
            name='ProblemFix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fix', models.CharField(max_length=254, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problem_fixes',
            },
        ),
        migrations.CreateModel(
            name='ProblemSymptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom', models.CharField(max_length=254)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problem_symptoms',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=41)),
                ('user', models.CharField(max_length=25)),
                ('forks', models.IntegerField()),
                ('stars', models.IntegerField()),
                ('watchers', models.IntegerField()),
                ('open_issues', models.IntegerField()),
                ('is_engineered_project', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'repositories',
            },
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=41)),
                ('sha', models.CharField(max_length=40)),
                ('author', models.CharField(blank=True, max_length=25, null=True)),
                ('author_email', models.CharField(blank=True, max_length=47, null=True)),
                ('commit_date', models.DateField(blank=True, null=True)),
                ('rounds', models.IntegerField(blank=True, null=True)),
                ('dataset', models.ForeignKey(db_column='dataset', on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.dataset')),
            ],
            options={
                'db_table': 'commits',
            },
        ),
        migrations.CreateModel(
            name='Categorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha', models.CharField(max_length=40)),
                ('is_func_fix', models.BooleanField()),
                ('func_fix_comment', models.TextField(blank=True, null=True)),
                ('category_comment', models.TextField(blank=True, null=True)),
                ('cause_comment', models.TextField(blank=True, null=True)),
                ('symptom_comment', models.TextField(blank=True, null=True)),
                ('fix_comment', models.TextField(blank=True, null=True)),
                ('should_discuss', models.BooleanField(blank=True, null=True)),
                ('bug_fix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.bugfix')),
                ('categorizer', models.ForeignKey(db_column='categorizer', on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.categorizer')),
                ('problem_category', models.ForeignKey(blank=True, db_column='problem_category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemcategory')),
                ('problem_cause', models.ForeignKey(blank=True, db_column='problem_cause', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemcause')),
                ('problem_fix', models.ForeignKey(blank=True, db_column='problem_fix', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemfix')),
                ('problem_symptom', models.ForeignKey(blank=True, db_column='problem_symptom', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemsymptom')),
            ],
            options={
                'db_table': 'categorizations',
            },
        ),
        migrations.AddField(
            model_name='bugfix',
            name='problem_category',
            field=models.ForeignKey(blank=True, db_column='problem_category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemcategory'),
        ),
        migrations.AddField(
            model_name='bugfix',
            name='problem_cause',
            field=models.ForeignKey(blank=True, db_column='problem_cause', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemcause'),
        ),
        migrations.AddField(
            model_name='bugfix',
            name='problem_fix',
            field=models.ForeignKey(blank=True, db_column='problem_fix', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemfix'),
        ),
        migrations.AddField(
            model_name='bugfix',
            name='problem_symptom',
            field=models.ForeignKey(blank=True, db_column='problem_symptom', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ponder.problemsymptom'),
        ),
    ]
