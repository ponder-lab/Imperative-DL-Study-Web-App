# Generated by Django 3.1.5 on 2021-02-04 10:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BugFixes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_func_fix', models.TextField(blank=True, null=True)),
                ('category_comment', models.CharField(blank=True, max_length=512, null=True)),
                ('cause_comment', models.CharField(blank=True, max_length=512, null=True)),
                ('symptom_comment', models.CharField(blank=True, max_length=512, null=True)),
                ('fix_comment', models.CharField(blank=True, max_length=512, null=True)),
                ('should_discuss', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bug_fixes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categorizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_func_fix', models.IntegerField()),
                ('func_fix_comment', models.TextField(blank=True, null=True)),
                ('category_comment', models.TextField(blank=True, null=True)),
                ('cause_comment', models.TextField(blank=True, null=True)),
                ('symptom_comment', models.TextField(blank=True, null=True)),
                ('fix_comment', models.TextField(blank=True, null=True)),
                ('should_discuss', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categorizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categorizers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('initials', models.CharField(max_length=3, unique=True)),
                ('user', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'categorizers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommitDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
                ('file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_test', models.IntegerField(blank=True, null=True)),
                ('method_name', models.CharField(blank=True, max_length=51, null=True)),
                ('tf_function_adds', models.IntegerField(blank=True, db_column='tf.function_adds', null=True)),
                ('tf_function_dels', models.IntegerField(blank=True, db_column='tf.function_dels', null=True)),
                ('total_adds', models.IntegerField(blank=True, null=True)),
                ('total_dels', models.IntegerField(blank=True, null=True)),
                ('warning_alert', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'commit_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=41)),
                ('author', models.CharField(blank=True, max_length=25, null=True)),
                ('author_email', models.CharField(blank=True, max_length=47, null=True)),
                ('commit_date', models.DateField(blank=True, null=True)),
                ('round', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'commits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problem_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemCauses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cause', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problem_causes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemFixes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fix', models.CharField(max_length=512, unique=True)),
            ],
            options={
                'db_table': 'problem_fixes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemSymptoms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'problem_symptoms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Repositories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=25)),
                ('forks', models.IntegerField()),
                ('stars', models.IntegerField()),
                ('watchers', models.IntegerField()),
                ('open_issues', models.IntegerField()),
                ('is_engineered_project', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'repositories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datasets',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.commits')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('description', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'datasets',
                'managed': False,
            },
        ),
    ]
